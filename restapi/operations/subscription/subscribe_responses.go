// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// SubscribeOKCode is the HTTP code returned for type SubscribeOK
const SubscribeOKCode int = 200

/*
SubscribeOK Subscription successful. Confirmation email sent.

swagger:response subscribeOK
*/
type SubscribeOK struct {
}

// NewSubscribeOK creates SubscribeOK with default headers values
func NewSubscribeOK() *SubscribeOK {

	return &SubscribeOK{}
}

// WriteResponse to the client
func (o *SubscribeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// SubscribeBadRequestCode is the HTTP code returned for type SubscribeBadRequest
const SubscribeBadRequestCode int = 400

/*
SubscribeBadRequest Invalid input

swagger:response subscribeBadRequest
*/
type SubscribeBadRequest struct {
}

// NewSubscribeBadRequest creates SubscribeBadRequest with default headers values
func NewSubscribeBadRequest() *SubscribeBadRequest {

	return &SubscribeBadRequest{}
}

// WriteResponse to the client
func (o *SubscribeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// SubscribeConflictCode is the HTTP code returned for type SubscribeConflict
const SubscribeConflictCode int = 409

/*
SubscribeConflict Email already subscribed

swagger:response subscribeConflict
*/
type SubscribeConflict struct {
}

// NewSubscribeConflict creates SubscribeConflict with default headers values
func NewSubscribeConflict() *SubscribeConflict {

	return &SubscribeConflict{}
}

// WriteResponse to the client
func (o *SubscribeConflict) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(409)
}
