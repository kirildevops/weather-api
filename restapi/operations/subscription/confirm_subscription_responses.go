// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// ConfirmSubscriptionOKCode is the HTTP code returned for type ConfirmSubscriptionOK
const ConfirmSubscriptionOKCode int = 200

/*
ConfirmSubscriptionOK Subscription confirmed successfully

swagger:response confirmSubscriptionOK
*/
type ConfirmSubscriptionOK struct {
}

// NewConfirmSubscriptionOK creates ConfirmSubscriptionOK with default headers values
func NewConfirmSubscriptionOK() *ConfirmSubscriptionOK {

	return &ConfirmSubscriptionOK{}
}

// WriteResponse to the client
func (o *ConfirmSubscriptionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// ConfirmSubscriptionBadRequestCode is the HTTP code returned for type ConfirmSubscriptionBadRequest
const ConfirmSubscriptionBadRequestCode int = 400

/*
ConfirmSubscriptionBadRequest Invalid token

swagger:response confirmSubscriptionBadRequest
*/
type ConfirmSubscriptionBadRequest struct {
}

// NewConfirmSubscriptionBadRequest creates ConfirmSubscriptionBadRequest with default headers values
func NewConfirmSubscriptionBadRequest() *ConfirmSubscriptionBadRequest {

	return &ConfirmSubscriptionBadRequest{}
}

// WriteResponse to the client
func (o *ConfirmSubscriptionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// ConfirmSubscriptionNotFoundCode is the HTTP code returned for type ConfirmSubscriptionNotFound
const ConfirmSubscriptionNotFoundCode int = 404

/*
ConfirmSubscriptionNotFound Token not found

swagger:response confirmSubscriptionNotFound
*/
type ConfirmSubscriptionNotFound struct {
}

// NewConfirmSubscriptionNotFound creates ConfirmSubscriptionNotFound with default headers values
func NewConfirmSubscriptionNotFound() *ConfirmSubscriptionNotFound {

	return &ConfirmSubscriptionNotFound{}
}

// WriteResponse to the client
func (o *ConfirmSubscriptionNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
