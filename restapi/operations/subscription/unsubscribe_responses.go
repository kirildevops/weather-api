// Code generated by go-swagger; DO NOT EDIT.

package subscription

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"
)

// UnsubscribeOKCode is the HTTP code returned for type UnsubscribeOK
const UnsubscribeOKCode int = 200

/*
UnsubscribeOK Unsubscribed successfully

swagger:response unsubscribeOK
*/
type UnsubscribeOK struct {
}

// NewUnsubscribeOK creates UnsubscribeOK with default headers values
func NewUnsubscribeOK() *UnsubscribeOK {

	return &UnsubscribeOK{}
}

// WriteResponse to the client
func (o *UnsubscribeOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(200)
}

// UnsubscribeBadRequestCode is the HTTP code returned for type UnsubscribeBadRequest
const UnsubscribeBadRequestCode int = 400

/*
UnsubscribeBadRequest Invalid token

swagger:response unsubscribeBadRequest
*/
type UnsubscribeBadRequest struct {
}

// NewUnsubscribeBadRequest creates UnsubscribeBadRequest with default headers values
func NewUnsubscribeBadRequest() *UnsubscribeBadRequest {

	return &UnsubscribeBadRequest{}
}

// WriteResponse to the client
func (o *UnsubscribeBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}

// UnsubscribeNotFoundCode is the HTTP code returned for type UnsubscribeNotFound
const UnsubscribeNotFoundCode int = 404

/*
UnsubscribeNotFound Token not found

swagger:response unsubscribeNotFound
*/
type UnsubscribeNotFound struct {
}

// NewUnsubscribeNotFound creates UnsubscribeNotFound with default headers values
func NewUnsubscribeNotFound() *UnsubscribeNotFound {

	return &UnsubscribeNotFound{}
}

// WriteResponse to the client
func (o *UnsubscribeNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(404)
}
