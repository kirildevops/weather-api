// Code generated by go-swagger; DO NOT EDIT.

package restapi

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"encoding/json"
)

var (
	// SwaggerJSON embedded version of the swagger document used at generation time
	SwaggerJSON json.RawMessage
	// FlatSwaggerJSON embedded flattened version of the swagger document used at generation time
	FlatSwaggerJSON json.RawMessage
)

func init() {
	SwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Weather API application that allows users to subscribe to weather updates for their city.",
    "title": "Weather Forecast API",
    "version": "1.0.0"
  },
  "host": "weatherapi.app",
  "basePath": "/api",
  "paths": {
    "/confirm/{token}": {
      "get": {
        "description": "Confirms a subscription using the token sent in the confirmation email.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscription"
        ],
        "summary": "Confirm email subscription",
        "operationId": "confirmSubscription",
        "parameters": [
          {
            "type": "string",
            "description": "Confirmation token",
            "name": "token",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription confirmed successfully"
          },
          "400": {
            "description": "Invalid token"
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    },
    "/subscribe": {
      "post": {
        "description": "Subscribe an email to receive weather updates for a specific city with chosen frequency.",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscription"
        ],
        "summary": "Subscribe to weather updates",
        "operationId": "subscribe",
        "parameters": [
          {
            "type": "string",
            "description": "Email address to subscribe",
            "name": "email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "City for weather updates",
            "name": "city",
            "in": "formData",
            "required": true
          },
          {
            "enum": [
              "hourly",
              "daily"
            ],
            "type": "string",
            "description": "Frequency of updates (hourly or daily)",
            "name": "frequency",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription successful. Confirmation email sent."
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Email already subscribed"
          }
        }
      }
    },
    "/unsubscribe/{token}": {
      "get": {
        "description": "Unsubscribes an email from weather updates using the token sent in emails.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscription"
        ],
        "summary": "Unsubscribe from weather updates",
        "operationId": "unsubscribe",
        "parameters": [
          {
            "type": "string",
            "description": "Unsubscribe token",
            "name": "token",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Unsubscribed successfully"
          },
          "400": {
            "description": "Invalid token"
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    },
    "/weather": {
      "get": {
        "description": "Returns the current weather forecast for the specified city using WeatherAPI.com.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "weather"
        ],
        "summary": "Get current weather for a city",
        "operationId": "getWeather",
        "parameters": [
          {
            "type": "string",
            "description": "City name for weather forecast",
            "name": "city",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation - current weather forecast returned",
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "description": "Weather description",
                  "type": "string"
                },
                "humidity": {
                  "description": "Current humidity percentage",
                  "type": "number"
                },
                "temperature": {
                  "description": "Current temperature",
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "City not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Subscription": {
      "type": "object",
      "required": [
        "email",
        "city",
        "frequency"
      ],
      "properties": {
        "city": {
          "description": "City for weather updates",
          "type": "string"
        },
        "confirmed": {
          "description": "Whether the subscription is confirmed",
          "type": "boolean"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "frequency": {
          "description": "Frequency of updates",
          "type": "string",
          "enum": [
            "hourly",
            "daily"
          ]
        }
      }
    },
    "Weather": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Weather description",
          "type": "string"
        },
        "humidity": {
          "description": "Current humidity percentage",
          "type": "number"
        },
        "temperature": {
          "description": "Current temperature",
          "type": "number"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Weather forecast operations",
      "name": "weather"
    },
    {
      "description": "Subscription management operations",
      "name": "subscription"
    }
  ]
}`))
	FlatSwaggerJSON = json.RawMessage([]byte(`{
  "schemes": [
    "http",
    "https"
  ],
  "swagger": "2.0",
  "info": {
    "description": "Weather API application that allows users to subscribe to weather updates for their city.",
    "title": "Weather Forecast API",
    "version": "1.0.0"
  },
  "host": "weatherapi.app",
  "basePath": "/api",
  "paths": {
    "/confirm/{token}": {
      "get": {
        "description": "Confirms a subscription using the token sent in the confirmation email.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscription"
        ],
        "summary": "Confirm email subscription",
        "operationId": "confirmSubscription",
        "parameters": [
          {
            "type": "string",
            "description": "Confirmation token",
            "name": "token",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription confirmed successfully"
          },
          "400": {
            "description": "Invalid token"
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    },
    "/subscribe": {
      "post": {
        "description": "Subscribe an email to receive weather updates for a specific city with chosen frequency.",
        "consumes": [
          "application/json",
          "application/x-www-form-urlencoded"
        ],
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscription"
        ],
        "summary": "Subscribe to weather updates",
        "operationId": "subscribe",
        "parameters": [
          {
            "type": "string",
            "description": "Email address to subscribe",
            "name": "email",
            "in": "formData",
            "required": true
          },
          {
            "type": "string",
            "description": "City for weather updates",
            "name": "city",
            "in": "formData",
            "required": true
          },
          {
            "enum": [
              "hourly",
              "daily"
            ],
            "type": "string",
            "description": "Frequency of updates (hourly or daily)",
            "name": "frequency",
            "in": "formData",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Subscription successful. Confirmation email sent."
          },
          "400": {
            "description": "Invalid input"
          },
          "409": {
            "description": "Email already subscribed"
          }
        }
      }
    },
    "/unsubscribe/{token}": {
      "get": {
        "description": "Unsubscribes an email from weather updates using the token sent in emails.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "subscription"
        ],
        "summary": "Unsubscribe from weather updates",
        "operationId": "unsubscribe",
        "parameters": [
          {
            "type": "string",
            "description": "Unsubscribe token",
            "name": "token",
            "in": "path",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Unsubscribed successfully"
          },
          "400": {
            "description": "Invalid token"
          },
          "404": {
            "description": "Token not found"
          }
        }
      }
    },
    "/weather": {
      "get": {
        "description": "Returns the current weather forecast for the specified city using WeatherAPI.com.",
        "produces": [
          "application/json"
        ],
        "tags": [
          "weather"
        ],
        "summary": "Get current weather for a city",
        "operationId": "getWeather",
        "parameters": [
          {
            "type": "string",
            "description": "City name for weather forecast",
            "name": "city",
            "in": "query",
            "required": true
          }
        ],
        "responses": {
          "200": {
            "description": "Successful operation - current weather forecast returned",
            "schema": {
              "type": "object",
              "properties": {
                "description": {
                  "description": "Weather description",
                  "type": "string"
                },
                "humidity": {
                  "description": "Current humidity percentage",
                  "type": "number"
                },
                "temperature": {
                  "description": "Current temperature",
                  "type": "number"
                }
              }
            }
          },
          "400": {
            "description": "Invalid request"
          },
          "404": {
            "description": "City not found"
          }
        }
      }
    }
  },
  "definitions": {
    "Subscription": {
      "type": "object",
      "required": [
        "email",
        "city",
        "frequency"
      ],
      "properties": {
        "city": {
          "description": "City for weather updates",
          "type": "string"
        },
        "confirmed": {
          "description": "Whether the subscription is confirmed",
          "type": "boolean"
        },
        "email": {
          "description": "Email address",
          "type": "string"
        },
        "frequency": {
          "description": "Frequency of updates",
          "type": "string",
          "enum": [
            "hourly",
            "daily"
          ]
        }
      }
    },
    "Weather": {
      "type": "object",
      "properties": {
        "description": {
          "description": "Weather description",
          "type": "string"
        },
        "humidity": {
          "description": "Current humidity percentage",
          "type": "number"
        },
        "temperature": {
          "description": "Current temperature",
          "type": "number"
        }
      }
    }
  },
  "tags": [
    {
      "description": "Weather forecast operations",
      "name": "weather"
    },
    {
      "description": "Subscription management operations",
      "name": "subscription"
    }
  ]
}`))
}
