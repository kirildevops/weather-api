// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"encoding/json"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// Subscription subscription
//
// swagger:model Subscription
type Subscription struct {

	// City for weather updates
	// Required: true
	City *string `json:"city"`

	// Whether the subscription is confirmed
	Confirmed bool `json:"confirmed,omitempty"`

	// Email address
	// Required: true
	Email *string `json:"email"`

	// Frequency of updates
	// Required: true
	// Enum: ["hourly","daily"]
	Frequency *string `json:"frequency"`
}

// Validate validates this subscription
func (m *Subscription) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateCity(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEmail(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateFrequency(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *Subscription) validateCity(formats strfmt.Registry) error {

	if err := validate.Required("city", "body", m.City); err != nil {
		return err
	}

	return nil
}

func (m *Subscription) validateEmail(formats strfmt.Registry) error {

	if err := validate.Required("email", "body", m.Email); err != nil {
		return err
	}

	return nil
}

var subscriptionTypeFrequencyPropEnum []interface{}

func init() {
	var res []string
	if err := json.Unmarshal([]byte(`["hourly","daily"]`), &res); err != nil {
		panic(err)
	}
	for _, v := range res {
		subscriptionTypeFrequencyPropEnum = append(subscriptionTypeFrequencyPropEnum, v)
	}
}

const (

	// SubscriptionFrequencyHourly captures enum value "hourly"
	SubscriptionFrequencyHourly string = "hourly"

	// SubscriptionFrequencyDaily captures enum value "daily"
	SubscriptionFrequencyDaily string = "daily"
)

// prop value enum
func (m *Subscription) validateFrequencyEnum(path, location string, value string) error {
	if err := validate.EnumCase(path, location, value, subscriptionTypeFrequencyPropEnum, true); err != nil {
		return err
	}
	return nil
}

func (m *Subscription) validateFrequency(formats strfmt.Registry) error {

	if err := validate.Required("frequency", "body", m.Frequency); err != nil {
		return err
	}

	// value enum
	if err := m.validateFrequencyEnum("frequency", "body", *m.Frequency); err != nil {
		return err
	}

	return nil
}

// ContextValidate validates this subscription based on context it is used
func (m *Subscription) ContextValidate(ctx context.Context, formats strfmt.Registry) error {
	return nil
}

// MarshalBinary interface implementation
func (m *Subscription) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *Subscription) UnmarshalBinary(b []byte) error {
	var res Subscription
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
